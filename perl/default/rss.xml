use EnsEMBL::Web::SpeciesDefs;
use EnsEMBL::Web::DBSQL::NewsAdaptor;

my $SD = EnsEMBL::Web::SpeciesDefs->new;
my $release_id = $SiteDefs::VERSION;

# Connect to web database and get news adaptor
my $web_db = $SD->databases->{'ENSEMBL_WEBSITE'};
my $wa = EnsEMBL::Web::DBSQL::NewsAdaptor->new($web_db);

my $results = $wa->fetch_news_items( { 'release' => $release_id } );

my $species_hash = $wa->fetch_species;
$wa->disconnect;

print "Content-type: xml/rss\n\n";

print qq(
<rss version="2.0">
  <channel>
  <language>en</language>
  <copyright>Copyright 2005 The Ensembl webteam</copyright>
  <managingEditor>webmaster\@ensembl.org</managingEditor>
  <webMaster>webmaster\@ensembl.org</webMaster>
  <title>Ensembl release $release_id</title>
  <link>http://www.ensembl.org/</link>
  <description>
Ensembl is a joint project between EMBL - EBI and the Sanger Institute  to develop a software system which produces and maintains automatic annotation on selected eukaryotic genomes. Ensembl is primarily funded by the Wellcome Trust. The site provides free access to all the data and software from the Ensembl project. Click on a species name to browse the data.
  </description>
  <language>en-gb</language>
);
foreach my $E ( @$results ) {
  my $C = $E->{'content'};
  if( $C =~ /^\s*<p>(.*)<\/p>/ ) {
    $C = $1;
  } 
  $C =~ s/<.*//sm;
  print qq(
    <item>
      <title>$E->{'title'}</title>
      <description>$C</description>
      <link>http://www.ensembl.org/).$species_hash->{$E->{'species'}[0]}.qq(/newsview?rel=$release_id#$E->{'news_item_id'}</link>
    </item>);
}
print "
  </channel>
</rss>";
