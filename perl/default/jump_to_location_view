#!/usr/local/bin/perl
package jump_to_location_view;

# Form-processing script that takes parameters from various forms
# and forwards to the appropriate Location URL

use strict;
use warnings;
no warnings 'uninitialized';

use CGI;
use POSIX qw(floor);

use EnsEMBL::Web::CoreObjects;
use EnsEMBL::Web::DBSQL::DBConnection;
use EnsEMBL::Web::Proxy::Factory;
use EnsEMBL::Web::RegObj;

my $input         = new CGI;
my $species       = $ENV{'ENSEMBL_SPECIES'};
my $species_defs  = $ENSEMBL_WEB_REGISTRY->species_defs;
my $species_path  = $species_defs->species_path;
my $db_connection = $species ne 'common' ? new EnsEMBL::Web::DBSQL::DBConnection($species, $species_defs) : undef;
my $core_objects  = new EnsEMBL::Web::CoreObjects($input, $db_connection);
my $factory       = new EnsEMBL::Web::Proxy::Factory('Location', {
  _input        => $input,
  _core_objects => $core_objects,
  _databases    => $db_connection
});

eval {
  $factory->createObjects;
};

my $url;

if ($factory->param('karyotype')) {
  ## karyoview image map
  my @chrs = @{$species_defs->ENSEMBL_CHROMOSOMES};
  my $per_row = int(scalar(@chrs) / 2) + (scalar(@chrs) % 2);
  my $x = $factory->param('vclick.x');
  my $y = $factory->param('vclick.y');

  ## For now, assume largest chr is in row 1
  my $top_row_height = $factory->param('total_height') - ($factory->param('max_chr') - 55);
  my $bottom_row_height = $factory->param('max_chr') - 55;
  my $row = $y > $bottom_row_height ? 1 : 0;
  my $col = int($x / 44);
  my $chr = @chrs[$col + $per_row * $row]; 
  
  if ($chr) {
    $url = sprintf '%s/Location/Chromosome?r=%s:1-100000', $species_path, $chr;
  } else {
    ## Return to previous location
    $url = sprintf '%s/Location/Karyotype?r=%s:%s-%s', $species_path, $factory->param('chr'), $factory->param('start'), $factory->param('end');
  }
} elsif ($factory->param('entry')) {
  ## Entry form on species homepages
  my $region = $factory->param('region') || $factory->param('chr') || 1;
  my $start  = $factory->param('start') || 1;
  my $end    = $factory->param('end') || 100000;
  
  $url = sprintf '%s/Location/View?r=%s:%s-%s', $species_path, $region, $start, $end;
} elsif ($factory->param('chr')) {
  ## change_chromosome form
  $url = sprintf '%s/Location/Chromosome?r=%s:1-100000', $species_path, $factory->param('chr');
} else {
  ## Using imagemap, so work out coordinates based on click point
  my $temp_id = $factory->param('click.x') + $factory->param('vclick.y');
  my $centrepoint = floor(
    $factory->param('seq_region_left') +
    ($temp_id - $factory->param('click_left') + 0.5) /
    ($factory->param('click_right') - $factory->param('click_left') + 1) *
    ($factory->param('seq_region_right') - $factory->param('seq_region_left') + 1)
  );
  
  my $seq_region_start = $centrepoint - ($factory->param('seq_region_width') - 1) / 2; 
  $seq_region_start    = 0 if $seq_region_start < 0;
  
  my $seq_region_end = $seq_region_start + $factory->param('seq_region_width'); 

  $url = sprintf(
    '%s/Location/View?r=%s:%d-%d',
    $species_path,
    $factory->param('seq_region_name'),
    $seq_region_start,
    $seq_region_end
  );
}

$factory->redirect($url);

1;
