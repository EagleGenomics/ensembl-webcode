#!/usr/local/bin/perl 

package haploview;

use strict;
use warnings;
no warnings "uninitialized";

use EnsEMBL::Web::Input;
use EnsEMBL::Web::Output::HTML;
use EnsEMBL::Web::DataFactory::HaplotypeFactory;
use EnsEMBL::DB::DBConnection;		

use Data::Dumper;

$| = 1;

my $input  = EnsEMBL::Web::Input->new( 'haploview' ); 	
	$input->initialise_from_cgi();
my $output = EnsEMBL::Web::Output::HTML->new(  );  
my $dbs    = EnsEMBL::DB::DBConnection->new( $input->species );
my $haplotypeFactory = EnsEMBL::Web::DataFactory::HaplotypeFactory->new
  ( $dbs, $input, $output );

$haplotypeFactory->createObjects();	

if ( $haplotypeFactory->has_a_problem ) {	
  if ($haplotypeFactory->has_problem_type('multi')){		
    warn "\033[31m MULTI HAPLOTYPES\033[0m \n ";
    $output->start; 
    foreach my $haplo_data ( @{$haplotypeFactory->DataObjects} ) {
      my $haplo_renderer = $haplo_data->renderer;
      $haplo_renderer->haplotypeTableTitle;
      $haplo_renderer->outputmultiHaplotypeTable();
    }  	
    $output->end;
  } elsif ($haplotypeFactory->has_problem_type('database_connection')){
    $haplotypeFactory->problem->[0]->{'name'} = 'Haplotype Not Avaliable';
    $haplotypeFactory->problem->[0]->{'description'} = "Haploview is not avaliable for ". $input->species ." as there is no haplotype database.";
    $output->error_page( $haplotypeFactory->problem->[0]) ; 
    $output->ensembl_exit;		 
  } else {
    $output->error_page( $haplotypeFactory->problem->[0]) ; 
    $output->ensembl_exit;
  }
} else {
  $output->start; 
  foreach my $haplo_data ( @{$haplotypeFactory->DataObjects} ) {
    my $haplo_renderer = $haplo_data->renderer;
    $haplo_renderer->outputTopHaplotypeTable();
    $haplo_renderer->output_Haplotypepolymorph();
    $haplo_renderer->output_HaplotypePatterns();
    $haplo_renderer->output_Haplotypeunclass();
  }  	
  $output->end;
}

use Bio::EnsEMBL::Registry; Bio::EnsEMBL::Registry->disconnect_all();1;
