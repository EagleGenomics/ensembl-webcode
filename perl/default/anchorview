#!/usr/local/bin/perl
package anchorview;

# Form-processing script that takes parameters from mapview
# and passes the appropriate URL to contigview or cytoview
# (or throws an error back to mapview!)

use strict;
use warnings;
no warnings "uninitialized";

use EnsEMBL::Web::Document::WebPage;
                                                                                
my $webpage= new EnsEMBL::Web::Document::WebPage(
  'renderer'   => 'Apache',
  'outputtype' => 'HTML',
  'scriptname' => 'anchorview',
  'objecttype' => 'Location',
);

my $extra_URL = '';
my $f = $webpage->factory;
foreach( qw( type1 anchor1 type2 anchor2 downstream upstream chr) ) {
  $extra_URL .= sprintf( ";%s=%s", $_, $f->escape($f->param($_)) ) if $f->param($_);
} 

if( $webpage->has_problem_type( 'fatal' ) ) {
  $webpage->redirect("/$ENV{'ENSEMBL_SPECIES'}/mapview?error=1$extra_URL");
} elsif( $webpage->has_a_problem ) {
  $webpage->redirect("/$ENV{'ENSEMBL_SPECIES'}/mapview?error=2$extra_URL"); ## this means not all on same chromosome
} else { ## grab the object and check to see if it is less than 5Mb
  my $object = $webpage->dataObjects->[0]; 
  my $URL = sprintf( "/%s/%s?l=%s:%d-%s",
    $ENV{'ENSEMBL_SPECIES'},
    $object->length < 1.0001e6 * ($object->species_defs->ENSEMBL_GENOME_SIZE || 1) ? 'contigview' : 'cytoview',
    $object->seq_region_name,
    $object->seq_region_start,
    $object->seq_region_end
  );
  $URL .= ';h='.join '|', ( $object->param('type1') eq 'bp' ? () : $object->param('anchor1') ),
                          ( $object->param('type2') eq 'bp' ? () : $object->param('anchor2') );
  $webpage->redirect( $URL );
}

1;
