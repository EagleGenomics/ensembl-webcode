package highlight_method;

use Syntax::Highlight::Perl;

my $color_table = {
    'Variable_Scalar'   => 'color:#080;',
    'Variable_Array'    => 'color:#f70;',
    'Variable_Hash'     => 'color:#80f;',
    'Variable_Typeglob' => 'color:#f03;',
    'Subroutine'        => 'color:#980;',
    'Quote'             => 'color:#00a;',
    'String'            => 'color:#00a;',
    'Comment_Normal'    => 'color:#069;font-style:italic;',
    'Comment_POD'       => 'color:#014;font-family:' .
                               'garamond,serif;font-size:11pt;',
    'Bareword'          => 'color:#3A3;',
    'Package'           => 'color:#900;',
    'Number'            => 'color:#f0f;',
    'Operator'          => 'color:#000;',
    'Symbol'            => 'color:#000;',
    'Keyword'           => 'color:#000;',
    'Builtin_Operator'  => 'color:#300;',
    'Builtin_Function'  => 'color:#001;',
    'Character'         => 'color:#800;',
    'Directive'         => 'color:#399;font-style:italic;',
    'Label'             => 'color:#939;font-style:italic;',
    'Line'              => 'color:#000;',
};

#  Program proper
#=====================================================================

my $formatter = Syntax::Highlight::Perl->new();

$formatter->define_substitution('<' => '&lt;', 
                                '>' => '&gt;', 
                                '&' => '&amp;'); # HTML escapes.

# install the formats set up above
while ( my ( $type, $style ) = each %{$color_table} ) {

    $formatter->set_format($type, [ qq|<span style="$style">|, 
                                    '</span>' ] );
}

## First we have to find the module!!
print "Content-type: text/html\n\n";

my( $module, $method ) = $ENV{'PATH_INFO'}=~ /^\/(.*)::(.*)/;
(my $file = $module) =~ s/::/\//g;

my $fullfile = '';
foreach my $dir (@INC) {
  $fullfile = "$dir/$file.pm";
  if( -e $fullfile) {
    last;
  }
  $fullfile = '';
}

my $flag = $method eq '';
my $out = '';
if( $fullfile ) {
  open I, "<$fullfile";
  while(<I>) {
    if( $method ne '' && /^sub\s*(\w+)/) {
      $flag = $1 eq $method;
    }
    if( $flag ) {
      $out .= $formatter->format_string($_) unless /^\s*###/;
    }
  }
}
warn $out if $out =~ s/\s+$//;
if( $out ) {
  print '<pre style=\"font-size:10pt;color:#336;">';
  print $out;
  print "</pre>";
} else {
  print "<p>CANNOT FIND METHOD $method in $module</p>\n";
}

