#! /usr/bin/perl

package login;

use EnsEMBL::Web::Object::User;
use EnsEMBL::Web::RegObj; 
use Apache2::RequestUtil;

use CGI;
my $cgi = new CGI;
my $user = EnsEMBL::Web::Object::User->new({ 
                                      username => $cgi->param('username'),
                                      password => $cgi->param('password')
                                           });

my $SD = $ENSEMBL_WEB_REGISTRY->species_defs;
my $user_cookie = EnsEMBL::Web::Cookie->new({
   'host'    => $SD->ENSEMBL_COOKIEHOST,
   'name'    => $SD->ENSEMBL_USER_COOKIE,
   'value'   => '',
   'env'     => 'ENSEMBL_USER_ID',
   'hash'    => {
     'offset'  => $SD->ENSEMBL_ENCRYPT_0,
     'key1'    => $SD->ENSEMBL_ENCRYPT_1,
     'key2'    => $SD->ENSEMBL_ENCRYPT_2,
     'key3'    => $SD->ENSEMBL_ENCRYPT_3,
     'expiry'  => $SD->ENSEMBL_ENCRYPT_EXPIRY,
     'refresh' => $SD->ENSEMBL_ENCRYPT_REFRESH
   }
});
      my $r = Apache2::RequestUtil->request();
#my $r = Apache->request();
my $url = "/error/login_failed.html?url=" . $cgi->param('url');
if ($user->name) {
  warn "OK: Logging in as " . $user->name;
  my $encrypted = EnsEMBL::Web::DBSQL::UserDB::encryptID($user->id);
  $user_cookie->create( $r , $user->id );

  ## TODO: This method of passing in a URL is problematic. Someone clicking on the 'login'
  ## link from the login_failed.html page, for example, would get forwarded back to the
  ## referring page. For now, let's just send people back to the home page.
  #$url = $cgi->param('url');

  $url = "/index.html";
}

CGI::redirect( $url );

1;

