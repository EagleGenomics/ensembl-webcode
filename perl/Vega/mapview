#!/usr/local/bin/perl
package mapview;

use strict;
use warnings;
no warnings "uninitialized";

use EnsEMBL::Web::Input;
use EnsEMBL::Web::Output::HTML;
use EnsEMBL::Web::DataFactory::ChrFactory;
use EnsEMBL::DB::DBConnection;

$| = 1;

my $input  = EnsEMBL::Web::Input->new( 'mapview' );
$input->initialise_from_cgi();

# cache mapview image
$input->param("cache_image", [1]);

my $output = EnsEMBL::Web::Output::HTML->new(  );  
my $dbs    = EnsEMBL::DB::DBConnection->new( $input->species );
my $ChrFactory = EnsEMBL::Web::DataFactory::ChrFactory->new(    
                            $dbs, 
                            $input,                             
                            $output );


$ChrFactory->createObjects();   

if ($ChrFactory->has_fatal_problem) {   
    $output->error_page($ChrFactory->get_problem_type('fatal'));
    $output->ensembl_exit;
} else {
    $output->start; 
    for my $Data (@{$ChrFactory->DataObjects}){
        my $renderer = $Data->renderer;
        my $imageHTML = $renderer->outputMapviewMapImage;
        my $data = $renderer->DataObj; 
        $renderer->print(qq(
                    <table border="0" width="100%%"><tr>
                    <td valign="top">$imageHTML</td>
                    <td valign="top" width="100%%"><br />));
                    #need to get this html out of here 
        $renderer->print($renderer->Output->stacked_table(
                    $renderer->chromoview_chr_stats_annot,
                    $renderer->haplotypes_info,
                    $renderer->change_chromosome_form(undef, 1),
                    $renderer->jump2anchorviewform,
                    $renderer->acknowledgements_annot,
		    $renderer->chromoview_link,
                    ));
        $renderer->print(qq(
                    </td>
                    </tr></table>));  #and this html
          }
}
$output->end;

use Bio::EnsEMBL::Registry; Bio::EnsEMBL::Registry->disconnect_all();1;

1;
