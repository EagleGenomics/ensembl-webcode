#######################################################################
# Name: contigview { configuration based version of contigview }      #
#######################################################################
package contigview;

use strict;
use Apache;
use CGI qw(:cgi :cookie);
use ContigView::NewSupport;
use Data::Dumper;

################################# Initialization
$|=1; # Stop buffering of output!!

my $object = ContigView::NewSupport->new( Apache->request );
   $object->parse_cgi_parameters( CGI->new );
my $l = $object->get_location_from_parameters();

my $slices = [];

if( $object->{'problem'} ) {
  $object->start_page();
  warn $object->{'problem'}->[0];
  print qq(
<h3>Problem of type @{[$object->{'problem'}->[0]->type]}: @{[$object->{'problem'}->[0]->name]}</h3>
<p>@{[$object->{'problem'}->[0]->description]}</p>);
  $object->end_page();
} elsif( $l ) {
  $object->add_panel( 'ideogram', 
    'length' => $l->seq_region_length,
    'config' => 'chromosome',
    'module' => 'ContigView::Panel::Ideogram',
    'view_width' => $l->length
  );
  $object->add_panel( 'bottom',
    'length' => $l->length,
     'config' => 'cytoview',
     'module' => 'ContigView::Panel::Bottom',
    'bands' => 'yes',
    'band' => $object->{'parameter'}->{'band'},
  );

  $object->produce_page( $l, $slices );
} else {
  $object->start_page();
  print qq(
<h3>Insufficient information to construct slice</h3>);
  $object->end_page();

}

use Bio::EnsEMBL::Registry; Bio::EnsEMBL::Registry->disconnect_all();1;

1;
