#!/usr/local/bin/perl
use strict;
use Text::Wrap;

use CGI qw /:standard/;

my $CONST = 1600;
my %path = ( 'live' => '/ensweb/www/server/logs/', 'dev' => '/ensweb/wwwdev/server/logs/', 'test' => '/ensweb/www/webtest/logs/');
 
my @hosts   = qw( live_ecs3a_80 live_ecs3b_80 live_ecs3c_80 live_ecs3d_80 dev_ecs3d_8000 test_ecs3d_8080 );
my @refresh = qw( 1 2 5 10 15 20 30 60 120 );
my @lines   = qw( 1 2 5 10 15 17 20 25 30 50 100 );
my @fonts   = qw( 6 7 8 9 10 11 12 14 );

my $opt_lines   = &param( 'opt_lines'   ) || 10;
my $opt_refresh = &param( 'opt_refresh' ) || '';
my $opt_font    = &param( 'opt_font'    ) || '10px';

my @opt_hosts = ( grep { defined &param($_) } @hosts );
@opt_hosts    = ( grep { /^live_/ } @hosts ) unless @opt_hosts;

my %checked = map { ($_,'checked') } @opt_hosts;
my %selected = map { ($_,'selected') } ($opt_refresh, $opt_font, "l$opt_lines") ;

my $REDIRECT = '';

if($opt_refresh ne "") {
    my $hosts = join('=1&', @opt_hosts);
    $hosts .= "=1" if(defined($hosts));
    $REDIRECT = qq(<META HTTP-EQUIV="refresh" CONTENT="$opt_refresh; URL=$ENV{'ENSEMBL_SCRIPT'}?opt_refresh=${opt_refresh}&opt_lines=${opt_lines}&opt_font=${opt_font}&${hosts}">);
}


print qq(Content-type: text/html

<html>
<head>
<title>Log tailing</title>
$REDIRECT
</head>
<body bgcolor="#ffffff">
<form action="$ENV{'ENSEMBL_SCRIPT'}" method="GET">
<table border="0" width="100%">
  <tr valign="top">
    <td width="200">
);

print qq(<input type="checkbox" name="$_"   value="1" $checked{$_}  > $_<br />) foreach( @hosts );

print qq(
     display <select name="opt_lines">
);
print qq(<option value="$_" ).$selected{"l$_"}.qq(>$_</option>) foreach( @lines );

print qq(
     </select> lines<br />
     refresh in <select name="opt_refresh">
       <option value=""   $selected{''}></option>
);
print qq(<option value="$_" $selected{$_}>$_</option>) foreach( @refresh );
print qq(
     </select> secs<br>
     font size <select name="opt_font">
);
print qq(<option value="$_" $selected{$_}>$_</option>) foreach( map { $_.'px' } @fonts );
print qq(
     </select><br>
     <center><input type="submit" value="update"><br><br></center>
     You must click 'update'<br> if you change any parameters.
   </td>
);
print qq(<td><pre style="font-size: $opt_font">);

$Text::Wrap::columns = int($CONST / $opt_font);
$Text::Wrap::huge = 'wrap';
for my $h (@opt_hosts) {
    my( $type, $host, $port ) = split /_/, $h;
    my $logfile = $path{$type}.$host.".error_log";

    if(-e $logfile) {
       	open(TIN, "tail -$opt_lines $logfile |");
        print qq(<strong>HOST: $host:$port</strong>\n);
    	while(<TIN>) {
    	    $_ = Text::Wrap::wrap( "> ", "    ", $_);
	    s/</&lt;/g;
    	    s/>/&gt;/g;
            if(/LONG PROCESS/) {
               $_ = qq(<div style="background-color: #ffcccc">$_</div>);
            } elsif(/Archive database is unavailable/||/Error when connecting to database/||/database for this species/) {
               $_ = qq(<div style="background-color: #ffffcc">$_</div>);
            } elsif(/www_sanger_gene/||/www_embl_gene/||/Fpc_Clone/) {
               $_ = qq(<div style="background-color: #e8ffe8">$_</div>);
            } elsif(/DAS ERROR/||/unable to map seqfeature/) {
               $_ = qq(<div style="background-color: #ffe8cc">$_</div>);
            } elsif(/UNDEF ON/) {
               $_ = qq(<div style="background-color: #e8e8ff">$_</div>);
            }
	    print $_;
        }
        close TIN;
    }
    print "\n";
}

print qq(</pre></td></tr></table></form></body></html>);
