#!/usr/local/bin/perl

use strict;
use warnings;
no warnings "uninitialized";

warn "Loading perl startup file...\n\n";

# for things in the /perl directory
use ModPerl::Registry;
# for things in the /cgi-perl directory
#use Apache::PerlRun;
# for status info
use Apache2::Status;
use Apache2::SizeLimit;
use Apache2::ServerUtil;
use EnsEMBL::Web::SpeciesDefs;
$Apache2::SizeLimit::MAX_PROCESS_SIZE = 400000;  # Kill httpd over 500Mb

use DBI ();
use Storable qw(nfreeze freeze thaw ); ####
use Data::Dumper;                      ####
$Data::Dumper::Indent = 1;
# for page handling
use EnsEMBL::Web::Apache::SendDecPage;
use EnsEMBL::Web::Apache::ServerError;
use EnsEMBL::Web::Apache::Handlers;
use EnsEMBL::Web::Document::ColourChanger;

my $conf = EnsEMBL::Web::SpeciesDefs->new();
if( $conf->ENSEMBL_MART_ENABLED ) {
require "BioMart/Initializer.pm";
BioMart::Initialize->import();
require "BioMart/Configuration/Attribute.pm";
require "BioMart/Configuration/AttributeCollection.pm";
require "BioMart/Configuration/AttributeGroup.pm";
require "BioMart/Configuration/AttributeList.pm";
require "BioMart/Configuration/AttributeTree.pm";
require "BioMart/Configuration/BaseFilter.pm";
require "BioMart/Configuration/BooleanFilter.pm";
require "BioMart/Configuration/ConfigurationTree.pm";
require "BioMart/Configuration/DBLocation.pm";
require "BioMart/Configuration/FilterCollection.pm";
require "BioMart/Configuration/FilterGroup.pm";
require "BioMart/Configuration/FilterList.pm";
require "BioMart/Configuration/FilterTree.pm";
require "BioMart/Configuration/Location.pm";
require "BioMart/Configuration/MartDBLocation.pm";
require "BioMart/Configuration/MartURLLocation.pm";
require "BioMart/Configuration/Option.pm";
require "BioMart/Configuration/PushAction.pm";
require "BioMart/Configuration/RegistryDBPointer.pm";
require "BioMart/Configuration/RegistryURLPointer.pm";
require "BioMart/Configuration/URLLocation.pm";
require "BioMart/Configuration/ValueFilter.pm";
require "BioMart/Configuration/VirtualSchema.pm";
require "BioMart/AttributeTable.pm";
require "BioMart/Configurator.pm";
require "BioMart/DatasetI.pm";
require "BioMart/Exception.pm";
require "BioMart/FormatterI.pm";
require "BioMart/Links.pm";
require "BioMart/Query.pm";
require "BioMart/QueryRunner.pm";
require "BioMart/Registry.pm";
require "BioMart/ResultTable.pm";
require "BioMart/Root.pm";
require "BioMart/RootI.pm";
require "BioMart/Web.pm";
require "BioMart/Dataset/GenomicSequence/DNAAdaptor.pm";
require "BioMart/Dataset/GenomicAlign.pm";
require "BioMart/Dataset/GenomicMAlign.pm";
require "BioMart/Dataset/GenomicSequence.pm";
require "BioMart/Dataset/GenomicSequenceMod.pm";
require "BioMart/Dataset/TableSet.pm";
require "BioMart/Formatter/AXTPLUS.pm";
require "BioMart/Formatter/ADF.pm";
require "BioMart/Formatter/AXT.pm";
require "BioMart/Formatter/FASTA.pm";
require "BioMart/Formatter/CSV.pm";
require "BioMart/Formatter/FASTAA.pm";
require "BioMart/Formatter/FASTACDNA.pm";
require "BioMart/Formatter/FASTAH.pm";
require "BioMart/Formatter/GFF.pm";
require "BioMart/Formatter/HTML.pm";
require "BioMart/Formatter/MAF.pm";
require "BioMart/Formatter/MAF_NOPREVIEW.pm";
require "BioMart/Formatter/MAF_RESTRICTED.pm";
require "BioMart/Formatter/MFA.pm";
require "BioMart/Formatter/MFASTA.pm";
require "BioMart/Formatter/TSV.pm";
require "BioMart/Formatter/TXT.pm";
require "BioMart/Formatter/XLS.pm";
require "BioMart/Web/CGIXSLT.pm";
require "BioMart/Web/SiteDefs.pm";
require "BioMart/Web/TemplateBuilder.pm";
}
#=cut
# below are needed for renewing from the saved martconf.packed file

# for making gifs
use GD ();

# Load CGI.pm and call it's compile method to precompile it's autoloaded routines
use CGI qw(-compile :cgi);


if( Apache2::ServerUtil::restart_count == 1 ){ # Only parse the config on first pass
  warn( "\n" . ('=' x 78) . "\n" );
  $conf->store;
#--- dynamically build mart registry file...
  EnsEMBL::Web::Document::ColourChanger::change_ddmenu_colours( $conf ); 
  EnsEMBL::Web::Document::ColourChanger::change_zoom_colours(   $conf ); 
  EnsEMBL::Web::Document::ColourChanger::change_CSS_colours(    $conf );
  if( keys %{$conf->{'_multi'}{'marts'}} && !$SiteDefs::ENSEMBL_NOMART) { ### NOMARTS
    my $MART_CONFFILE = "${SiteDefs::ENSEMBL_SERVERROOT}/biomart-perl/conf/martRegistry.xml";
    my $MR_file = $MART_CONFFILE;
    if(! -e $MR_file) {                                                   ####
      open FH, ">$MR_file";                                               ####
      print FH $conf->create_martRegistry;                                ####
      close FH;                                                           ####
    }                             
  }
  # Remove cached image files
  my @cached_images = map { glob($conf->ENSEMBL_TMP_DIR_CACHE."/$_.*") }
    "mapview", "chromoview";
  my $icount = unlink(@cached_images);
  $icount and warn( "[CONF]    [INFO] Removed $icount cached image files\n" );
  $icount == @cached_images 
    or warn( "[CONF]    [WARN] Some cached image files not removed: $!" );
  warn( ('=' x 78) . "\n\n" );

  warn "Server information:\n";
  warn "Name: ".$conf->ENSEMBL_PROTOCOL."://".$conf->ENSEMBL_SERVERNAME.":".$conf->ENSEMBL_PROXY_PORT,"\n";
  warn "Real: ".$conf->ENSEMBL_PROTOCOL."://".$conf->ENSEMBL_SERVER.":".$conf->ENSEMBL_PORT,"\n";
  require EnsEMBL::Web::BlastView::MetaDataBlast;
} else{
#  warn( "\n" . ('=' x 78) . "\n" );
#  require EnsEMBL::Web::BlastView::MetaData; # Require at startup due to time taken to compile
#  warn( ('=' x 78) . "\n\n" );
}

1;
